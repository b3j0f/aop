Aspects: Aspect Oriented Programming for Python
===============================================

Python Aspect Oriented Programming
----------------------------------

This library aims to improve python aspects oriented programming efficiency among several existing library.

Improvements:
=============

1. Free and unlimited access: no limit to idea and to knowledge sharing with the license MIT.

2. Performance:

  - less memory consumption in using the __slots__ class property.
  - less time on (un-)weaving and advice application.
  - (dis/en)abling advices without remove them.

3. Easy to use:

  - distributed programming:

    + joinpoint matching with function or regex.
    + interception context sharing in order to ease behaviour sharing between advices.
    + uuid for advice identification in order to ease its use in a distributed context.

  - extensible through pythonic code, same logic to function code interception and concern modularisation with one module by joinpoint or advice.
  - respect of aspects vocabulary in order to ease its use among AOP users.
  - close to callable python objects in weaving all types of callable elements such as (built-in) functions, (built-in) class, (built-in) methods, callable objects.
  - advices are callable objects.

4. Benchmark:

 - speed execution

Limitations:
============

- tested on python 2.7

State of the art:
=================

Related to improvements criteria points (1. Free and unlimited access, etc.), a state of the art is provided here.

+-----------+----------------------------+----------+-----------+-----+-----------+
| Library   | Url                        | License  | Execution | Use | Benchmark |
+===========+============================+==========+===========+=====+===========+
| pyaop     | http://tinyurl.com/kaukuco | MIT      | +++       | +++ | +++       |
+-----------+----------------------------+----------+-----------+-----+-----------+
| pyaspects | http://tinyurl.com/n7ccof5 | GPL      | +++       | +   | +         |
+-----------+----------------------------+----------+-----------+-----+-----------+
| aspects   | http://tinyurl.com/obp8t2v | LGPL 2.1 | +         | +   | +         |
+-----------+----------------------------+----------+-----------+-----+-----------+
| aspect    | http://tinyurl.com/lpd87bd | --       | +         | -   | -         |
+-----------+----------------------------+----------+-----------+-----+-----------+
| PyAOP     | http://tinyurl.com/lubcjlg | --       | -         | -   | -         |
+-----------+----------------------------+----------+-----------+-----+-----------+
| spring    | http://tinyurl.com/dmkpj3  | Apache   | ++        | +   | ++        |
+-----------+----------------------------+----------+-----------+-----+-----------+

pyaspects
=========

aspects
=======

- more limit to idea and knowledge sharing with the license LGPL 2.1.
- more difficulties to understand code with no respect of the AOP vocabulary, packaged into one module and more than 600 files.

aspect
======

PyAOP
=====

spring
======
